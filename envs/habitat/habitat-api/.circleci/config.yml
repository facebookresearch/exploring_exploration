version: 2
gpu: &gpu
  machine:
    image: ubuntu-1604:201903-01
  resource_class: gpu.small
  environment:
    FPS_THRESHOLD: 900

jobs:
  python_lint:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: setup
          command: |
              sudo pip install black isort numpy
              sudo pip install -r requirements.txt --progress-bar off
      - run:
          name: run black
          command: |
              black . --line-length 79 setup.py  --diff
              black . --line-length 79 setup.py --check
      - run:
          name: run isort
          command: |
              isort . -rc --multi-line 3 --trailing-comma --force-grid-wrap 0 --line-width 79 --combine-as -o torch -o pytest -o torchvision -o matplotlib -p habitat_sim --diff
              isort . -rc --multi-line 3 --trailing-comma --force-grid-wrap 0 --line-width 79 --combine-as -o torch -o pytest -o torchvision -o matplotlib -p habitat_sim --check-only

  install_and_test_ubuntu:
    <<: *gpu
    steps:
      - checkout:
          path: ./habitat-api
      - run:
          name: Install cmake
          no_output_timeout: 5m
          command: |
              echo $(git ls-remote https://github.com/facebookresearch/habitat-sim.git HEAD | awk '{ print $1}') > ./hsim_sha
              wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh
              sudo mkdir /opt/cmake
              sudo sh ./cmake-3.13.4-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
              sudo ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
      - run:
          name: Install dependencies
          no_output_timeout: 20m
          command: |
              sudo apt-get update || true
              sudo apt-get install -y --no-install-recommends \
                  build-essential \
                  git \
                  curl \
                  vim \
                  ca-certificates \
                  libjpeg-dev \
                  libglm-dev \
                  libegl1-mesa-dev \
                  xorg-dev \
                  freeglut3-dev \
                  pkg-config \
                  wget \
                  zip \
                  unzip || true
      - run:
          name: Install cuda
          no_output_timeout: 20m
          background: true
          command: |
              wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_8.0.44-1_amd64.deb
              sudo dpkg -i cuda-repo-ubuntu1604_8.0.44-1_amd64.deb
              sudo apt-get update || true
              sudo apt-get --yes --force-yes install cuda
              touch ./cuda_installed
              nvidia-smi
      - restore_cache:
          keys:
            - conda-{{ checksum "habitat-api/.circleci/config.yml" }}
      - run:
          name: Install conda and dependencies
          no_output_timeout: 20m
          command: |
              if [ ! -d ~/miniconda ]
              then
                curl -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
                chmod +x ~/miniconda.sh
                ~/miniconda.sh -b -p $HOME/miniconda
                rm ~/miniconda.sh
                export PATH=$HOME/miniconda/bin:$PATH
                conda create -y -n habitat python=3.6
                . activate habitat
                conda install -q -y -c conda-forge ninja ccache numpy pytest
              fi
      - run:
          name: Install pytorch
          no_output_timeout: 20m
          background: true
          command: |
              if [ ! -f ~/miniconda/pytorch_installed ]
              then
                export PATH=$HOME/miniconda/bin:$PATH
                . activate habitat;
                conda install -c  conda-forge opencv -y
                conda install -y pytorch torchvision cudatoolkit=10.0 -c pytorch
              fi
              touch ~/miniconda/pytorch_installed
      - restore_cache:
          keys:
            - habitat-sim-{{ checksum "./hsim_sha" }}
      - restore_cache:
          keys:
            - ccache-{{ arch }}-master
          paths:
            - /home/circleci/.ccache
      - run:
          name: CCache initialization
          command: |
            export PATH=$HOME/miniconda/bin:$PATH
            . activate habitat;
            ccache --show-stats
            ccache --zero-stats
            ccache --max-size=10.0G
      - run:
          name: Build, install habitat-sim and run benchmark
          no_output_timeout: 20m
          command: |
              export PATH=$HOME/miniconda/bin:$PATH
              . activate habitat;
              if [ ! -d ./habitat-sim ]
              then
                git clone https://github.com/facebookresearch/habitat-sim.git
                cd habitat-sim
                pip install -r requirements.txt --progress-bar off
                python setup.py install --headless
              else
                if [ ! -f ~/miniconda/pip_deps_installed ]
                then
                  cd habitat-sim
                  pip install -r requirements.txt --progress-bar off
                  python setup.py install --headless
                fi
              fi
      - run:
          name: Ccache stats
          when: always
          command: |
            export PATH=$HOME/miniconda/bin:$PATH
            . activate habitat;
            ccache --show-stats
      - run:
          name: Download test data
          command: |

              if [ ! -d ./habitat-sim/data ]
              then
                cd habitat-sim
                wget http://dl.fbaipublicfiles.com/habitat/habitat-test-scenes.zip
                unzip habitat-test-scenes.zip
                rm habitat-test-scenes.zip
              fi
      - run:
          name: Run sim benchmark
          command: |
              while [ ! -f ./cuda_installed ]; do sleep 2; done # wait for CUDA
              export PATH=$HOME/miniconda/bin:$PATH
              . activate habitat; cd habitat-sim
              python examples/example.py --scene data/scene_datasets/habitat-test-scenes/van-gogh-room.glb --silent --test_fps_regression $FPS_THRESHOLD
      - save_cache:
          key: habitat-sim-{{ checksum "./hsim_sha" }}
          background: true
          paths:
            - ./habitat-sim
      - save_cache:
          key: ccache-{{ arch }}-master
          background: true
          paths:
            - /home/circleci/.ccache
      - run:
          name: Install api
          command: |
              export PATH=$HOME/miniconda/bin:$PATH
              . activate habitat; cd habitat-api
              while [ ! -f ~/miniconda/pytorch_installed ]; do sleep 2; done # wait for Pytorch
              ln -s ../habitat-sim/data data
              pip install -r requirements.txt --progress-bar off
              touch ~/miniconda/pip_deps_installed
      - save_cache:
          key: conda-{{ checksum "habitat-api/.circleci/config.yml" }}
          background: true
          paths:
            - ~/miniconda
      - run:
          name: Run api tests
          command: |
              export PATH=$HOME/miniconda/bin:$PATH
              . activate habitat; cd habitat-api
              python setup.py test
              python setup.py develop --all
              python -u habitat_baselines/run.py --exp-config habitat_baselines/config/pointnav/ppo_train_test.yaml --run-type train


workflows:
  version: 2
  install_and_test:
    jobs:
      - python_lint
      - install_and_test_ubuntu
